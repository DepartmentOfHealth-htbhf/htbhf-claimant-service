buildscript {

    apply from: "default-properties.gradle"

    ext {
        springBootVersion = '2.1.0.RELEASE'
        spockVersion = '1.2-groovy-2.4'
        HikariCPVersion = '2.7.8'
        postgresVersion = '9.4.1212'
    }

    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'org.shipkit.java' version '2.0.31'
}

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'idea'

    group = 'uk.gov.dhsc.htbhf'

    repositories {
        jcenter()
    }

    jacoco {
        toolVersion = "0.8.2"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    test {
        reports {
            junitXml.enabled = true
            html.enabled = true
        }
    }

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}

task jacocoReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }
    doFirst {
        executionData = files(executionData.findAll {
            it.exists()
        })
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

def testCounter = 0
allprojects {
    tasks.withType(Test) {
        afterSuite { testDescriptor, testResult ->
            testCounter += testResult.testCount
        }
    }
}

task copyReports() {
    copy {
        from 'api/build/reports'
        into 'build/reports'
    }
    copy {
        from 'src/documentation/gh-pages'
        into 'build/reports'
    }
    copy {
        from 'smoke_tests/build/reports/tests/test'
        into 'build/reports/smoke_tests'
    }
}



