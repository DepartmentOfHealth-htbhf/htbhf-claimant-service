version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - add_ssh_keys:
          fingerprints:
            - "c2:5e:a1:5a:18:84:c2:7e:b8:65:48:be:1e:c9:5c:8c"
      - run:
          name: build
          command: ./gradlew clean build check -s
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-gradle-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          when: always
      - persist_to_workspace:
          root: .
          paths:
            - ./*
  deploy:
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch
    environment:
      - APP_NAME=htbhf-claimant-service
      - CF_DOMAIN=apps.internal
      - SMOKE_TESTS=./ci_scripts/smoke_tests.sh
      - BIN_DIR=./bin
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "c2:5e:a1:5a:18:84:c2:7e:b8:65:48:be:1e:c9:5c:8c"
      - attach_workspace:
          at: .
      - run:
          name: upload test coverage
          command: ./gradlew jacocoTestReport testReport copyReports && bash <(curl -s https://codecov.io/bash)
      - run:
          name: Set app version and path
          command: |
            export APP_VERSION=`cat version.properties | grep "version" | cut -d'=' -f2`
            echo "export APP_VERSION=${APP_VERSION}" >> $BASH_ENV
            echo "export APP_PATH="api/build/libs/$APP_NAME-$APP_VERSION.jar"" >> $BASH_ENV
            source $BASH_ENV
            echo "APP_VERSION=${APP_VERSION}, APP_PATH=${APP_PATH}"
      - run:
          name: deploy to dev
          command: ./ci_scripts/ci_deploy.sh
      - run:
          name: set TRAVIS_BRANCH as this is required by shipkit
          command: |
            echo "export TRAVIS_BRANCH=$CIRCLE_BRANCH" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: release
          command: ./gradlew ciPerformRelease -s
      - run:
          name: install node repo
          command: curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
      - run:
          name: install node
          command: sudo apt-get install -y nodejs
      - run:
          name: Install gh-pages
          command: sudo npm install -g --silent gh-pages@2.0.1
      - run:
          name: Configure git email
          command: git config user.email "dhsc-htbhf-support@equalexperts.com"
      - run:
          name: Configure git name
          command: git config user.name "ci-build"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dist build/reports --message "[ci skip]"
      - run:
          name: ls bin/deployment-scripts/
          command: ls bin/deployment-scripts/
      - run:
          name: make scripts executable
          command: chmod +x ./bin/deployment-scripts/*.sh && chmod +x ./bin/deployment-scripts/management-scripts/*.sh && chmod +x ./ci_scripts/*.sh
      - run:
          name: Trigger cd build
          command: |
            export NEW_APP_VERSION=`cat version.properties | grep "version" | cut -d'=' -f2`
            if [ "${APP_VERSION}" == "${NEW_APP_VERSION}" ]; then echo "No changes - not invoking cd pipeline"; else ./bin/deployment-scripts/management-scripts/trigger_circleci_cd_to_deploy_java_app.sh; fi

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
