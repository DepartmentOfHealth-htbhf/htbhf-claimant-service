# see http://engineering.pivotal.io/post/spring-boot-injecting-credentials/
# to understand how spring parses cloud foundry vcap services environment variables
spring:
  datasource:
    url: ${vcap.services.htbhf-claimant-service-postgres.credentials.jdbcuri:jdbc:postgresql://localhost/claimant}
    username: ${vcap.services.htbhf-claimant-service-postgres.credentials.username:claimant_admin}
    password: ${vcap.services.htbhf-claimant-service-postgres.credentials.password:claimant_admin}
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connectionTimeout: 5000
      maximum-pool-size: 20
      register-mbeans: true
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL95Dialect
    properties.hibernate.temp.use_jdbc_metadata_defaults: false
    properties.hibernate.connection.CharSet: utf8
    properties.hibernate.connection.characterEncoding: utf8
    properties.hibernate.connection.useUnicode: true
    properties.hibernate.connection.releaseMode: after_transaction
  application:
    name: claimant/api
  boot:
    admin:
      url: http://localhost:8090
  jackson:
    default-property-inclusion: NON_NULL
  flyway:
    baseline-on-migrate: true
  task:
    scheduling:
      pool:
        size: 2

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] [%X{session.id}][%X{request.id}] %-5level %logger{36} - %msg%n%rEx{full, org.springframework.web, org.springframework.boot, org.apache.catalina, org.apache.coyote, org.apache.tomcat, java.base}"
  #        console: "%d{HH:mm:ss.SSS} [%thread] [%X{session.id}][%X{request.id}] %-5level %logger{36} - %msg%n"
  level:
    ROOT: ${vcap.services.variable-service.credentials.claimant-root-loglevel:info}
    uk.gov.dhsc: ${vcap.services.variable-service.credentials.claimant-app-loglevel:debug}
    com.zaxxer.hikari: debug

javers:
  commitIdGenerator: random

eligibility:
  base-uri: ${ELIGIBILITY_URI:http://localhost:8100}

entitlement:
  number-of-vouchers-per-child-under-one: 2
  number-of-vouchers-per-child-between-one-and-four: 1
  number-of-vouchers-per-pregnancy: 1
  voucher-value-in-pence: 310

card:
  services-base-uri: ${CARD_SERVICES_URI:http://localhost:8140}

message-processor:
  # run every 30 seconds. See https://stackoverflow.com/a/26147143 for more examples
  cron-schedule: "*/30 * * * * *"
  # lock for a minimum of 15 seconds, maximum of 60 minutes. See https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm
  # for an explanation of the ISO-8601 duration format
  minimum-lock-time: "PT15S"
  maximum-lock-time: "PT60M"
  message-limit: 1000

payment-cycle:
  cycle-duration-in-days: 28
  number-of-calculation-periods: 4
  maximum-balance-period: 8
  child-matched-to-pregnancy-period:
    weeks-before-due-date: 16
    weeks-after-due-date: 8
  schedule:
    # run at half-past the hour from 02:30 TO 05:30
    cron-schedule: "0 30 2-5 * * *"
    # lock for a minimum of 1 minute, maximum of 59 minutes. See https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm
    # for an explanation of the ISO-8601 duration format
    minimum-lock-time: "PT1M"
    maximum-lock-time: "PT59M"
    end-date-offset-days: 0

enable-scheduler: true

server:
  port: 8090

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
