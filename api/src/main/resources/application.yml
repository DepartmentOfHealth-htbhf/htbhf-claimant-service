# see http://engineering.pivotal.io/post/spring-boot-injecting-credentials/
# to understand how spring parses cloud foundry vcap servcies environment variables
spring:
    datasource:
        url: ${vcap.services.htbhf-claimant-service-postgres.credentials.jdbcuri:jdbc:postgresql://localhost/claimant}
        username: ${vcap.services.htbhf-claimant-service-postgres.credentials.username:claimant_admin}
        password: ${vcap.services.htbhf-claimant-service-postgres.credentials.password:claimant_admin}
        driver-class-name: org.postgresql.Driver
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
            connectionTimeout: 5000
    jpa:
        properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL9Dialect
        properties.hibernate.temp.use_jdbc_metadata_defaults: false
        properties.hibernate.connection.CharSet: utf8
        properties.hibernate.connection.characterEncoding: utf8
        properties.hibernate.connection.useUnicode: true
        properties.hibernate.connection.releaseMode: after_transaction
    application:
        name: claimant/api
    boot:
        admin:
            url: http://localhost:8080
    jackson:
      default-property-inclusion: NON_NULL
    flyway:
        baseline-on-migrate: true
logging:
    pattern:
        console: "%d{HH:mm:ss.SSS} [%thread] [%X{session.id}][%X{request.id}] %-5level %logger{36} - %msg%n"
    level:
        ROOT: ${vcap.services.variable-service.credentials.claimant-root-loglevel:info}
        uk.gov.dhsc: ${vcap.services.variable-service.credentials.claimant-app-loglevel:debug}

eligibility:
    base-uri: ${ELIGIBILITY_URI:http://localhost:8100}

server:
    port: 8090
